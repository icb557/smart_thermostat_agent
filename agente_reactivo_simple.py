# -*- coding: utf-8 -*-
"""agente_reactivo_simple.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C8bJAJf9glZCfxLf9hEb2UguNOD4VWBF

***Agente Reactivo Simple***

**Agente que de acuerdo con una percepcion realiza una acción*

    funcion agente_reactivo(percepcion) return accion
      reglas # conjunto de reglas si-entonces
      estado = leer_entrada(percepcion)
      regla = reglas.buscar(estado)
      accion = regla.accion
      return accion

---


***Agente que Reproductor de música - Agente Reactivo Simple***
"""

reglasMusica = {
    "saludar": "Bienvenido usuario",
    "despedir": "Gracias por utilizar mis servicios",
    "buscar": "Buscando música",
    "reproducir": "Reproduciendo canción",
    "apagar": "Hasta la vista",
    "santa": "Jo Jo Jo"
}

reglasMusica

reglasMusica["saludar"]

class agenteMusica:
  def __init__(self, reglasMusica):
    self.reglasMusica= reglasMusica

  def actuarAM(self,percepcion):
      if percepcion in self.reglasMusica:
          accion=self.reglasMusica[percepcion]
          return accion
      else:
          return "No comprender"

musicA = agenteMusica(reglasMusica)
  percepcion = input("Percepción -> ")
  while percepcion!="salir":
    print(musicA.actuarAM(percepcion))
    percepcion = input("Percepción -> ")
  print("Good Bye")

"""---
***Agente Máquina Dispensadora --  Agente Reactivo Simple***
"""

reglasMaquinaDispensadora = {
    'moneda':'pedir-codigo',
    'a1':'servir-bebida1',
    'a2':'servir-bebida2',
    'a3':'servir-bebida3',
    }

class agente:
  def __init__(self, reglasMaquinaDispensadora):
    self.reglasMaquinaDispensadora= reglasMaquinaDispensadora

  def actuar(self, percepcion):
    if percepcion in self.reglasMaquinaDispensadora:
      return self.reglasMaquinaDispensadora[percepcion]
    else:
      return "No comprender"

expendedora = agente(reglasMaquinaDispensadora)
percepcion = input("Percepción -> ")
while percepcion!="salir":
  accion = expendedora.actuar(percepcion)
  print("Acción : ",accion,"\n")
  percepcion = input("Percepción -> ")

print("Hasta la vista")

"""---
***Agente Traductor --  Agente Reactivo Simple***


"""

reglasTraduccion = {
"hello": "hola",
"world": "mundo",
"good": "bueno",
"morning": "mañana",
"night": "noche"
  }

class AgenteTraductor:
  def __init__(self, reglas):
    self.reglasTraduccion= reglasTraduccion

  def traducir(self,palabra):
    if palabra in self.reglasTraduccion:
      accion=reglasTraduccion[palabra]
      return accion
    else:
      return "No comprendo tu lenguaje"

agente_traductor = AgenteTraductor(reglasTraduccion)
percepcion = input("Percepción -> ")
while percepcion!="exit":
  accion = agente_traductor.traducir(percepcion)
  print("Acción : ",accion,"\n")
  percepcion = input("Percepción -> ")

print("Hasta la vista")